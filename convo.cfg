Types:
Speaker = alice, bob, chris
Topic = news, weather, food
Bool = true, false
Unit = unit
Sentiment = positive, neutral, negative
Properties:
topic :: Unit -> Topic ()
speaking :: Unit -> Speaker ()
related :: Topic -> Topic -> Bool ()
opinion :: Speaker -> Topic -> Sentiment ()

Actions:
changeTopic(speaker: Speaker, newtopic: Topic)
{
  precondition related(topic(unit),newtopic) == true;
  precondition speaking(unit) == speaker;
  public (Speaker) topic(unit) = newtopic
}

shareOpinion(speaker: Speaker) 
{
  precondition speaking(unit) == speaker;
  tell (Speaker): Which s in Sentiment: opinion(speaker, topic(unit)) == s 
}

Initial:
topic(unit) = news()
speaking(unit) = alice()
related(news, weather) = true()
related(weather, news) = true()
related(weather, food) = true()
related(food, weather) = true()

knows alice:
opinion(alice, food) = positive ()
opinion(alice, news) = negative ()
opinion(alice, weather) = neutral ()


Execute:
print: model
changetopic(alice, weather)
shareOpinion(alice)
print: model
Done.
